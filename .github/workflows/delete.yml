#
#
# 说明：
# 
# ‘清理Actions空间’ 删除12小时之前的一切固件和其他文件，保留数设置没效，一删除就会把在删除时间段内的固件全部删除
#
# ‘删除releases,可设置保留数’ 每次启动都生效，可以设置保留数
#
#  手动按钮启动时候参数为true时生效，为false是关闭项目启动
#
# ‘重新FORK上游仓库’ 只有在手动启动时候开启才生效，启动时参数改为fork的话，会把你现有的仓库改变成上游仓库的全部数据，要注意备份你的.config配置文件
#  重新FORK上游仓库需要设置好“REPO_TOKEN”，怎么设置请看《微信通知跟发布固功能密匙获取跟使用》,发布密匙就是了，此密匙用途非常广的
#  为防止开启跟关闭时候跟清理空间和删除releases混淆，‘重新FORK上游仓库’的开关开启参数为 fork
#
# env:下面的OLDER_WORKFLOW和OLDER_RELEASES是定时启动时候设置开或者关闭项目运行（true为开，false关）


name: Delete Actions
on:
  workflow_dispatch:
    inputs:
      older-actions:
        description: '清理Actions空间'
        required: false
        default: 'true'
      older-releases:
        description: '删除releases'
        required: false
        default: 'true'

#  schedule:
#    - cron: 10 4 * * *

env:
  OLDER_WORKFLOW: true
  OLDER_RELEASES: true

jobs:
  del_runs:
    runs-on: Ubuntu-20.04
    name: 清理仓库
    steps:
    
    - name: 设置项目开关参数控制
      run: |
        if [[ -n "${{ github.event.inputs }}" ]]; then
          if [[ "${{ github.event.inputs.older-actions }}" != 'true' ]]; then
            echo "OLDER_WORKFLOW=false" >> $GITHUB_ENV
          fi
          if [[ "${{ github.event.inputs.older-releases }}" != 'true' ]]; then
            echo "OLDER_RELEASES=false" >> $GITHUB_ENV
          fi
        fi
    
    - name: 清理Actions空间
      if: env.OLDER_WORKFLOW == 'true' || (github.event.inputs.older-actions == 'true')
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}       
        retain_days: 0.5
        keep_minimum_runs: 0
    
    - name: 删除releases,可设置保留数
      if: env.OLDER_RELEASES == 'true' || (github.event.inputs.older-releases == 'true')
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 0         # 保留多少个发布不删除
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
